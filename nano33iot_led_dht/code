
	// DHT sensor library 
	
	/* 
	  Sketch generated by the Arduino IoT Cloud Thing "First Thing"
	  https://create.arduino.cc/cloud/things/38ef9ee4-29c4-48cd-850f-86be44a9460b 
	
	  Arduino IoT Cloud Variables description
	
	  The following variables are automatically generated and updated when changes are made to the Thing
	
	  float boardHUMID;
	  float boardTEMP;
	  bool red_LED;
	
	  Variables which are marked as READ/WRITE in the Cloud Thing will also have functions
	  which are called when their values are changed from the Dashboard.
	  These functions are generated with the Thing and added at the end of this sketch.
	*/
	
	#include "thingProperties.h"
	#include <DHT.h>
	#include <DHT_U.h>
	
	#define DHTPIN 7
	#define DHTTYPE DHT11
	
	DHT dht(DHTPIN,DHTTYPE);
	
	int myLED = 8 ;
	
	void setup() {
	  // Initialize serial and wait for port to open:
	  Serial.begin(9600);
	  // This delay gives the chance to wait for a Serial Monitor without blocking if none is found
	  delay(1500); 
	
	  // Defined in thingProperties.h
	  initProperties();
	
	  pinMode(myLED, OUTPUT) ;
	  
	  dht.begin();
	  
	  // Connect to Arduino IoT Cloud
	  ArduinoCloud.begin(ArduinoIoTPreferredConnection);
	  
	  /*
	     The following function allows you to obtain more information
	     related to the state of network and IoT Cloud connection and errors
	     the higher number the more granular information youâ€™ll get.
	     The default is 0 (only errors).
	     Maximum is 4
	 */
	  setDebugMessageLevel(2);
	  ArduinoCloud.printDebugInfo();
	}
	
	void loop() {
	  ArduinoCloud.update();
	  // Your code here 
	  delay(2000) ;
	  
	  boardTEMP = dht.readTemperature();
	  boardHUMID = dht.readHumidity();
	  
	    
	  
	}
	
	/*
	  Since RedLED is READ_WRITE variable, onRedLEDChange() is
	  executed every time a new value is received from IoT Cloud.
	*/
	void onRedLEDChange()  {
	  Serial.println(red_LED);
	  
	  if(red_LED){
	    digitalWrite(myLED, HIGH);
	  } else {
	    digitalWrite(myLED, LOW);
	  }
	}
